{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/philipp/Projects/next-ts/pages/data.tsx\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nexport var Data = function Data(props) {\n  var _useState = useState(\"\"),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var getName =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res, name;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://jsonplaceholder.typicode.com/todos/1'\");\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              name = _context.sent;\n              setName(name);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getName() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getName();\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, name));\n};","map":{"version":3,"sources":["/Users/philipp/Projects/next-ts/pages/data.tsx"],"names":["React","useState","useEffect","Data","props","name","setName","getName","fetch","res","json"],"mappings":";;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAKA,SAASC,QAAT,EAAmBC,SAAnB,QAAwC,OAAxC;AAOA,OAAO,IAAMC,IAAwB,GAAG,SAA3BA,IAA2B,CAAAC,KAAK,EAAI;AAAA,kBAErBH,QAAQ,CAAS,EAAT,CAFa;AAAA,MAEtCI,IAFsC;AAAA,MAEhCC,OAFgC;;AAG7C,MAAMC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEIC,KAAK,CAAC,+CAAD,CAFT;;AAAA;AAERC,cAAAA,GAFQ;AAAA;AAAA,qBAGKA,GAAG,CAACC,IAAJ,EAHL;;AAAA;AAGRL,cAAAA,IAHQ;AAIZC,cAAAA,OAAO,CAACD,IAAD,CAAP;;AAJY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPE,OAAO;AAAA;AAAA;AAAA,KAAb;;AAOAL,EAAAA,SAAS,CAAC,YAAM;AACZK,IAAAA,OAAO;AAGV,GAJQ,EAIN,EAJM,CAAT;AAOA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAL,CADJ,CAFJ;AAOH,CAxBM","sourcesContent":["\nimport * as React from \"react\"\nimport { Layout } from \"../comps/MyLayout\"\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { CardHeader } from '@material-ui/core';\nimport { useState, useEffect, FC } from \"react\"\nimport { getDisplayName } from \"next/dist/next-server/lib/utils\";\n\ninterface AppProps {\n\n\n}\nexport const Data: React.FC<AppProps> = props => {\n\n    const [name, setName] = useState<string>(\"\")\n    const getName = async () => {\n\n        let res = await fetch(\"https://jsonplaceholder.typicode.com/todos/1'\")\n        let name = await res.json()\n        setName(name)\n    }\n\n    useEffect(() => {\n        getName()\n\n\n    }, []);\n\n\n    return (\n\n        <div>\n            <h1>{name}</h1>\n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}