{"ast":null,"code":"var _jsxFileName = \"/Users/philipp/Projects/next-ts/pages/data.tsx\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nconst Data = props => {\n  const {\n    0: name,\n    1: setName\n  } = useState([]);\n\n  const getName = async () => {\n    let res = await fetch(\"https://jsonplaceholder.typicode.com/todos/1'\");\n    let name = await res.json();\n    setName(name);\n  };\n\n  useEffect(() => {\n    getName();\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, name.map(item => __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, item.title)));\n};\n\nexport default Data;","map":{"version":3,"sources":["/Users/philipp/Projects/next-ts/pages/data.tsx"],"names":["React","useState","useEffect","Data","props","name","setName","getName","res","fetch","json","map","item","title"],"mappings":";;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAyC,OAAzC;;AAeA,MAAMC,IAAyB,GAAIC,KAAD,IAAW;AAEzC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAa,EAAb,CAAhC;;AACA,QAAMM,OAAO,GAAG,YAAY;AAExB,QAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,+CAAD,CAArB;AACA,QAAIJ,IAAI,GAAG,MAAMG,GAAG,CAACE,IAAJ,EAAjB;AACAJ,IAAAA,OAAO,CAACD,IAAD,CAAP;AACH,GALD;;AAOAH,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,OAAO;AAGV,GAJQ,EAIN,EAJM,CAAT;AAOA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACM,GAAL,CAASC,IAAI,IACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAI,CAACC,KAAX,CADH,CADL,CAFJ;AASH,CA1BD;;AA2BA,eAAeV,IAAf","sourcesContent":["\nimport * as React from \"react\"\nimport { useState, useEffect, SFC } from \"react\"\n\n\ninterface AppProps {\n    props: string\n\n}\n\ninterface Response {\n    userID: number\n    id: string\n    title: string\n    completed: boolean\n\n}\nconst Data: React.SFC<AppProps> = (props) => {\n\n    const [name, setName] = useState<Response[]>([])\n    const getName = async () => {\n\n        let res = await fetch(\"https://jsonplaceholder.typicode.com/todos/1'\")\n        let name = await res.json()\n        setName(name)\n    }\n\n    useEffect(() => {\n        getName()\n\n\n    }, []);\n\n\n    return (\n\n        <div>\n            {name.map(item => (\n                <div>{item.title}</div>\n            ))}\n        </div>\n    )\n\n}\nexport default Data;"]},"metadata":{},"sourceType":"module"}